   ---
   title: Integrate Carbon Daemons with Rackspace Metrics

   type: article

   created_date: '2016-03-03'

   created_by: Shane Duan

   last_modified_date: '2016-03-03'

   last_modified_by: Shane Duan

   product: Rackspace Metrics

   product_url: rackspace-metrics
   ---
   
#### Description

Carbon Forwarder allows you to integrate with Carbon Demons that make up the storage backend of a Graphite installation.

The integration is through a Carbon Forwarder instance that accepts pickle protocols metrics, which is the only protocol used by graphite carbon relay.

#### Dependencies

Carbon Forwarder has the following dependencies.

- twistd
- mock
- pytest
- txKeystone

#### Installation

Use the following command to install Carbon Forwarder.

    git clone https://github.com/rackerlabs/blueflood-carbon-forwarder.git

    cd blueflood-carbon-forwarder

    python setup.py install

#### Running

    twistd blueflood-forward

| **Switch** | **Description** | **default** |
| ---------- | --------------- | ----------- |
| -e | Endpoint to listen on for pickle protocol metrics | tcp:2004 |
| -i | Metrics send interval, sec | 30.0 |
| -b | Blueflood address | http://localhost:19000 |
| -t | Tenant ID | tenant |
| -p | Prefix to be prepended to metrics name | metric\_prefix |
| --ttl | TimeToLive value for metrics, sec | 86400 |
| -u | Keystone user |   |
| -k | Keystone key |   |
| --auth-url | Keystone token URL |   |

If you need no authentication, leave -u/--user command line argument empty (default value).

#### Sending metrics

To send a test metric to the twistd server you started above, run the following:

    python tests/scripts/sendPickle.py

Modify the script accordingly for your local testing.

#### Configuration

Pass the following command line arguments to twistd daemon when running, to complete the configuration:

    twistd -n -l - blueflood-forward --help

#### Logging

_(optional)_ If not using your own LogObserver, use the following command to control logging using LogObserver.

    twistd --logger carbonforwarderlogging.forwarder\_log\_observer.get\_log\_observer blueflood-forward

#### References

- For details about Carbon Daemons, see [http://graphite.readthedocs.org/en/1.0/carbon-daemons.html](http://graphite.readthedocs.org/en/1.0/carbon-daemons.html)
- For details about Carbon Forwarder project, see https://github.com/rackerlabs/blueflood-carbon-forwarder

